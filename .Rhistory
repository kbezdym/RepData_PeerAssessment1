a <- 1:10
a
b <- 2,4,7,2,4,7,3,9,1,1
b <- (2,4,7,2,4,7,3,9,1,1)
b <- c(2,4,7,2,4,7,3,9,1,1)
b
a
plot(a,b)
cleat
clar
clear
install.packages("RODBC")
help(odbcConnect)
??odbcConnect
channel <- odbcConnect("IG", oid = "sa", pwd = "sa13")
library(RODBC)
channel <- odbcConnect("IG", oid = "sa", pwd = "sa13")
channel <- odbcConnect("IG", uid = "sa", pwd = "sa13")
channel
channel <- odbcConnect("")
channel <- odbcConnect()
channel <- odbcDriverConnect()
channel <- odbcConnect("IG", uid = "sa", pwd = "sa13")
channel <- odbcConnect("testMyConnection", uid = "sa", pwd = "sa13")
channel
channel <- odbcConnect("testMyConnection", uid = "sbouser", pwd = "123")
channel
myQ <- sqlQuery(channel, "select * from OUDP")
myQ
myQ <- sqlQuery(channel, "select * from IG.dbo.OUDP")
myQ
QFP <- "select
isnull(t2.LastName + N' ' + t2.FirstName, N'_неизвестный') as manager
, datepart(yyyy,CreateDate) as y
, datepart(q,CreateDate) as q
, datepart(yyyy,CreateDate)*10 + datepart(q,CreateDate) as rn
, count(t1.DocNum) as NumberOfOPOR
from
OPOR t1 left join OHEM t2 on t1.OwnerCode = t2.empID
where
t2.LastName like N'%Громова%'
or t2.LastName like N'%Громова%'
or t2.LastName like N'%Шикалов%'
or t2.LastName like N'%Лешик%'
or t2.LastName like N'%Борисов%'
or t2.LastName like N'%Самохина%'
or t2.LastName like N'%Аранибар%'
group by t2.LastName + N' ' + t2.FirstName, datepart(yyyy,CreateDate),datepart(q,CreateDate)
order by 1,2,3
"
qfp
QFP
myQ <- sqlQuery(channel, QFP)
myQ
QFP <- "use IG;
select
isnull(t2.LastName + N' ' + t2.FirstName, N'_неизвестный') as manager
, datepart(yyyy,CreateDate) as y
, datepart(q,CreateDate) as q
, datepart(yyyy,CreateDate)*10 + datepart(q,CreateDate) as rn
, count(t1.DocNum) as NumberOfOPOR
from
OPOR t1 left join OHEM t2 on t1.OwnerCode = t2.empID
where
t2.LastName like N'%Громова%'
or t2.LastName like N'%Громова%'
or t2.LastName like N'%Шикалов%'
or t2.LastName like N'%Лешик%'
or t2.LastName like N'%Борисов%'
or t2.LastName like N'%Самохина%'
or t2.LastName like N'%Аранибар%'
group by t2.LastName + N' ' + t2.FirstName, datepart(yyyy,CreateDate),datepart(q,CreateDate)
order by 1,2,3
"
myQ <- sqlQuery(channel, QFP)
myQ
QFP
myQ <- sqlQuery(channel, QFP)
myQ
workpath
wark
work
folder
read.text("C:/Users/a.korolkov/Desktop\R_test.txt")
read.text("C:/Users/a.korolkov/Desktop/R_test.txt")
read.file("C:/Users/a.korolkov/Desktop/R_test.txt")
??read
readline("C:/Users/a.korolkov/Desktop/R_test.txt")
readlines("C:/Users/a.korolkov/Desktop/R_test.txt")
readLines("C:/Users/a.korolkov/Desktop/R_test.txt")
myQ <- sqlQuery(channel, readLines("C:/Users/a.korolkov/Desktop/R_test.txt"))
myQ
myQ <- sqlQuery(channel, "select * from IG.dbo.OUDP")
myQ
myQ <- sqlQuery(channel, "use IG;
select
isnull(t2.LastName + N' ' + t2.FirstName, N'_неизвестный') as manager
, datepart(yyyy,CreateDate) as y
, datepart(q,CreateDate) as q
, datepart(yyyy,CreateDate)*10 + datepart(q,CreateDate) as rn
, count(t1.DocNum) as NumberOfOPOR
from
OPOR t1 left join OHEM t2 on t1.OwnerCode = t2.empID
where
t2.LastName like N'%Громова%'
or t2.LastName like N'%Громова%'
or t2.LastName like N'%Шикалов%'
or t2.LastName like N'%Лешик%'
or t2.LastName like N'%Борисов%'
or t2.LastName like N'%Самохина%'
or t2.LastName like N'%Аранибар%'
group by t2.LastName + N' ' + t2.FirstName, datepart(yyyy,CreateDate),datepart(q,CreateDate)
order by 1,2,3
")
myQ
myQ <- sqlQuery(channel, "
select
isnull(t2.LastName + N' ' + t2.FirstName, N'_неизвестный') as manager
, datepart(yyyy,CreateDate) as y
, datepart(q,CreateDate) as q
, datepart(yyyy,CreateDate)*10 + datepart(q,CreateDate) as rn
, count(t1.DocNum) as NumberOfOPOR
from
IG.dbo.OPOR t1 left join IG.dbo.OHEM t2 on t1.OwnerCode = t2.empID
where
t2.LastName like N'%Громова%'
or t2.LastName like N'%Громова%'
or t2.LastName like N'%Шикалов%'
or t2.LastName like N'%Лешик%'
or t2.LastName like N'%Борисов%'
or t2.LastName like N'%Самохина%'
or t2.LastName like N'%Аранибар%'
group by t2.LastName + N' ' + t2.FirstName, datepart(yyyy,CreateDate),datepart(q,CreateDate)
order by 1,2,3
")
myQ
myQ(manager = "Громова Светлана")
myT <- myQ
myT
myT[1]
myT[manager = "Громова Светалана"]
myT[manager = "Громова Светлана"]
myT[1 = "Громова Светлана"]
myT[1б = "Громова Светлана"]
myT[1, = "Громова Светлана"]
myT[б1]
myT[,1]
myT
plot(myT)
&&plot
??plot
myT
myTT <-- myT(1,3,4)
myT[1,3,4]
myT[1 3 4]
myT[1:3, 4]
myT[с(1,3,4)]
myT[(1,3,4)]
myT[cols <- c(1,3,4)]
myT[cols <- c(1,4,5)]
myT <- myT[cols <- c(1,4,5)]
myT
plot(myT)
plot(myT[2],myT[3])
myT[,68:77]
myT[68:77]
myT[68:77,1]
myT[cols <- c(1,4,5), rows <- c(68:77)]
myT[cols <- c(1,4,5), rows <- c(68,69)]
myT[cols <- c(1,4,5), rws <- c(68,69)]
myT(cols <- 2)
myT[cols <- 2]
y <- myT[cols <- 2]
y
factor(y)
factors(y)
read.csmc <- v("C:\\Users\\a.korolkov\\Downloads\\rprog-data-quiz1_data\\hw1_data.csv")
mc <- read.csv("C:\\Users\\a.korolkov\\Downloads\\rprog-data-quiz1_data\\hw1_data.csv")
mc
mc(2)
mc[2]
mc[2,]
mc[1:2]
mc[1:2,]
mc[152:153,]
count(mc)
mc[na.rm <- true]
mc[na.rm <- TRUE]
mc[na.rm <- FALSE]
mc[na.rm <- FALSE,]
mc[na.rm <- FALSE]
mc[,na.rm <- FALSE]
mean(mc)
mean(mc$Ozon)
mean(mc$Ozon, na.rm <- TRUE)
help(mean)
mean(mc$Ozon,trim = 0, na.rm <- TRUE)
mc[is.na <- true]
mc[Ozone >= 30]
mc[mc$Ozone >= 30]
mc[,mc$Ozone >= 30]
mc
mc[mc$Ozone <-2]
mc[mc$Ozone = 2]
View(mc)
mmc <- mc[mc$Ozone <- 20]
help(data.frame)
mc(,"2")
mc[],"2"]
mc[,"2"]
mc["2"]
mc[2]
mc[,2]
mc
mc <- mc$Ozone >20
mc
mc <- read.csv("C:\\Users\\a.korolkov\\Downloads\\rprog-data-quiz1_data\\hw1_data.csv")
mc
mc <- mc$Ozone >20
mc
mc <- read.csv("C:\\Users\\a.korolkov\\Downloads\\rprog-data-quiz1_data\\hw1_data.csv")
mmc <- mc[mc$Ozone > 20]
mmc <- mc[,mc$Ozone > 20]
mmc <- mc[mc$Ozone > 20,]
mmc
mmc <- mc[mc$Month > 6,]
mean(mmc)
mean(mmc$Temp,trim = 0, na.rm <- TRUE)
mmc <- mc[mc$Month = 6,]
mmc <- mc[mc$Month <- 6,]
mean(mmc$Temp,trim = 0, na.rm <- TRUE)
mmc <- mc[mc$Month == 6,]
mean(mmc$Temp,trim = 0, na.rm <- TRUE)
mmc
mc
mc <- read.csv("C:\\Users\\a.korolkov\\Downloads\\rprog-data-quiz1_data\\hw1_data.csv")
mc
mmc <- mc[mc$Month == 6,]
mc
mmc
mean(mmc$Temp,trim = 0, na.rm <- TRUE)
mmc <- mc[mc$Month == 5,]
ььс
яmmc
mmc
max(mmc$Ozone)
help(max)
max(mmc$Ozone, na.rm = FALSE)
max(mmc$Ozone, na.rm = TRUE)
mmc <- mc[mc$Ozone > 31,]
mmc <- mmc[mmc$Temp > 90,]
mmc
mean(mmc$Solar.R,trim = 0, na.rm <- TRUE)
x <- 4L
x
info(x)
x <- c(4, TRUE)
x
class(x)
x <- 4L
x
class(x)
x <- c(1,3, 5)
y <- c(3, 2, 10)
cbind(x, y)
x <- list(2, "a", "b", TRUE)
x[[1]]
class(x[[1]])
x <- c(3, 5, 1, 10, 12, 6)
x
x[x %in% 1:5] <- 0
x
mc
mc[,1:2]
mc[1:2]
mc[,1:2]
mc[1:2,]
mc[152:153,]
mc[47,]
mmc <- mc[is.nan]
mean(mc$Ozon,trim = 0, na.rm <- TRUE)
ьс
mc
mean(mc$Ozon,trim = 0, na.rm <- TRUE)
sum(mc$Ozon,trim = 0, na.rm <- TRUE)
sum(mc$Ozon, na.rm <- TRUE)
sum(mc$Ozon, na.rm <- FALSE)
help(sum)
mc
help(rows)
help(row)
row(mc)
mc
mean(mc$Ozon,trim = 0, na.rm <- TRUE)
mc[na.rm <- TRUE]
mc[na.rm <- FALSE]
help(is,na)
is,na
is.na
help(is.na)
mc[is.na <- TRUE]
mc[is.na <- FALSE]
mc[is.na(mc$Ozon) <- FALSE]
mc[is.na(mc$Ozon) <- TRUE]
mc[is.na(mc$Ozon) <- FALSE]
mc[mc$Ozon > 6]
mc[is.na(mc$Ozone) <- FALSE]
mc[mc$Ozone > 6]
mc
install.packages("swirl")
library(swirl)
swirl()
bye()
3
dkfd
swirl
bye()
mc[is.na(mc$Ozone) = FALSE]
mc[na.rm = TRUE]
mc[is.na = TRUE]
mc[is.na(mc$Ozone) = TRUE]
x <- 1:10
if(x > 5) {
x <- 0
}
x
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
version
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
help(xyplot)
library(lattice)
library(datasets)
data(airquality)
p <- xyplot(Ozone ~ Wind | factor(Month), data = airquality)
print(p)
lines(1)
help(xyplot)
help(lattice)
library(datasets)
data(airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
install.packages("ggplot2")
library(ggplot2)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
library(ggplot2)
g <- ggplot(movies, aes(votes, rating))
print(g)
qplot(votes, rating, data = movies)
qplot(votes, rating, data = movies) + geom_smooth()
qplot(votes, rating, data = movies) + stats_smooth("loess")
qplot(votes, rating, data = movies, smooth = "loess")
qplot(votes, rating, data = movies, panel = panel.loess)
library(ggplot2)
g <- ggplot(movies, aes(votes, rating))
п
g
myapp <- oauth_app("github", "56b637a5baffac62cad9")
library(httr)
help(oauth_app)
myapp <- oauth_app("kbezdym", "33292c61975398184f68")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
stop_for_status(req)
content(req)
gtoken <- config(token = github_token)
gtoken
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
req
req <- with_config(gtoken, GET("https://api.github.com/rate_limit"))
req
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
help(oauth_app)
myapp <- oauth_app("github", "56b637a5baffac62cad9")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
myapp <- oauth_app("kbezdym", "33292c61975398184f68")
myapp <- oauth_app("kbezdym", "kbezdym")
myapp <- oauth_app("github",key="33292c61975398184f68",secret = "24f6ff8916482a5aa63ecbfbbe103bc32e72fd6b")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
> library(httr)
> library(httpuv)
> myapp <- oauth_app("github",key="33292c61975398184f68",secret = "24f6ff8916482a5aa63ecbfbbe103bc32e72fd6b")
> github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
> gtoken <- config(token = github_token)
> req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
> content(req)
library(httpuv)
myapp <- oauth_app("github",key="33292c61975398184f68",secret = "24f6ff8916482a5aa63ecbfbbe103bc32e72fd6b")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
content(req)
install.packages("hyypuv")
getwd()
setwd("C:/R_Coursera/RepData_PeerAssessment1")
help(unzip)
unzip(activity.zip)
unzip(/activity.zip)
unzip(activity.zip)
unzip(~/activity.zip)
unzip(activity.zip)
unzip("activity.zip")
unzip("activity.zip")
dirty <- read.csv("activity.csv")
dirty <- read.csv("activity.csv")
head(dirty)
help(sum)
gr <- group_by(dirty, date)
library(dplyr)
gr <- group_by(dirty, date)
endtable <- summarise_each(gr, funs(sum))
endtable
t1 <- subset(dirty, na.rm = TRUE)
head(t1)
t1 <- subset(dirty, is.na(steps) == FALSE)
head(t1)
View(gr)
help(subset)
t1 <- subset(dirty, is.na(steps) == FALSE, select(steps,date))
t1 <- subset(dirty, is.na(steps) == FALSE, select = c(steps,date))
head(t1)
gr <- group_by(t1, date)
summarise_each(gr, funs(sum))
summarise_each(group_by(t1, date), funs(sum))
tidy1 <- summarise_each(group_by(t1, date), funs(sum))
hist(tidy1)
hist(tidy1$steps)
tidy1 <- summarise_each(group_by(t1, date), funs(sum))
hist(tidy1$steps)
unzip("activity.zip")
dirty <- read.csv("activity.csv")
t1 <- subset(dirty, is.na(steps) == FALSE, select = c(steps,date))
t1 <- subset(dirty, is.na(steps) == FALSE, select = c(steps,date))
tidy1 <- summarise_each(group_by(t1, date), funs(sum))
hist(tidy1$steps)
help(hist)
hist(tidy1$steps, xlab = "test")
hist(tidy1$steps, xlab = "Steps per day")
hist(tidy1$steps, xlab = "Steps per day", main = "histogram of the total number of steps taken each day")
mean(tidy1$steps)
mediane(tidy1$steps)
med(tidy1$steps)
median(tidy1$steps)
print("Mean: ")
mean(tidy1$steps)
print("Mean: ")
mean(tidy1$steps)
print(paste("Mean: ", mean(tidy1$steps))
)
tidy2 <- subset(dirty, is.na(steps) == FALSE, select = c(steps,date))
View(dirty)
tidy2 <- subset(dirty, is.na(steps) == FALSE, select = c(steps,interval))
tidy2 <- summarise_each(group_by(tidy2, interval), funs(avg))
tidy2 <- summarise_each(group_by(tidy2, interval), funs(mean))
tidy2
help(plot)
plot(tidy2$interval, tidy2$steps, type = "l")
plot(tidy2$interval, tidy2$steps, type = "l", xlab = "interval", ylab = "Number of steps", main = "steps during he day")
plot(tidy2$interval, tidy2$steps, type = "l", xlab = "interval", ylab = "Number of steps", main = "steps during the day")
tidy2
summarize(tidy2)
summary(tidy2)
library(data.table)
t <- as.data.table(tidy2)
t
t[, .SD[which.max(t)], by = interval]
t[, .SD[which.max(steps)], by = interval]
tidy2
data.frame(tapply(surge[,2], surge[,1], max))
data.frame(tapply(tidy2[,2], tidy2[,1], max))
tidy2[,2]
data.frame(tapply(tidy2[,2], tidy2[,1], max))
data.frame(tapply(tidy2[,2], tidy2[,1], max)))
data.frame(tapply(tidy2[,2], tidy2[,1], max))
help(tapply)
tidy2[,2]
tidy2[,1]
as.factor(tidy2[,1])
q <- as.factor(tidy2[,1])
tidy2[,1]
tidy2
max(tidy2$steps)
tidy2 <- c(tidy2, max(tidy2$steps))
tidy2
tidy2 <- subset(dirty, is.na(steps) == FALSE, select = c(steps,interval))
tidy2 <- summarise_each(group_by(tidy2, interval), funs(mean))
tidy2
subset(tidy2, tidy2$steps == max(tidy2$steps))
subset(tidy2, tidy2$steps == max(tidy2$steps), select = tidy2$interval)
subset(tidy2, tidy2$steps == max(tidy2$steps), select = interval)
